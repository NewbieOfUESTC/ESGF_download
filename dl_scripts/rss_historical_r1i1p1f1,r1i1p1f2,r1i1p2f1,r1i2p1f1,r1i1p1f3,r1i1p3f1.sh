#!/bin/bash
##############################################################################
# ESG Federation download script
#
# Template version: 1.2
# Generated by esgf-data.dkrz.de - 2019/11/15 15:00:04
# Search URL: https://esgf-data.dkrz.de/esg-search/wget?mip_era=CMIP6&variable=rss&experiment_id=historical&variant_label=r1i1p1f1,r1i1p1f2,r1i1p2f1,r1i2p1f1,r1i1p1f3,r1i1p3f1&realm=aerosol,atmos,atmosChem,ocean,seaIce&frequency=mon,fx&limit=9999&download_structure=experiment_id,source_id,variant_label
#
###############################################################################
# first be sure it's bash... anything out of bash or sh will break
# and the test will assure we are not using sh instead of bash
if [ $BASH ] && [ `basename $BASH` != bash ]; then
    echo "######## This is a bash script! ##############" 
    echo "Change the execution bit 'chmod u+x $0' or start with 'bash $0' instead of sh."
    echo "Trying to recover automatically..."
    sleep 1
    /bin/bash $0 $@
    exit $?
fi

version=1.3.2
CACHE_FILE=.$(basename $0).status
openId=
search_url='https://esgf-data.dkrz.de/esg-search/wget?mip_era=CMIP6&variable=rss&experiment_id=historical&variant_label=r1i1p1f1,r1i1p1f2,r1i1p2f1,r1i2p1f1,r1i1p1f3,r1i1p3f1&realm=aerosol,atmos,atmosChem,ocean,seaIce&frequency=mon,fx&limit=9999&download_structure=experiment_id,source_id,variant_label'

#These are the embedded files to be downloaded
download_files="$(cat <<EOF--dataset.file.url.chksum_type.chksum
'historical/CanESM5/r1i1p1f1/rss_Emon_CanESM5_historical_r1i1p1f1_gn_185001-201412.nc' 'http://crd-esgf-drc.ec.gc.ca/thredds/fileServer/esgC_dataroot/AR6/CMIP6/CMIP/CCCma/CanESM5/historical/r1i1p1f1/Emon/rss/gn/v20190429/rss_Emon_CanESM5_historical_r1i1p1f1_gn_185001-201412.nc' 'SHA256' '9158f0282e76693f8e7113f4dc2c9e5ca89cedbbd86dc4134453412934b5df92'
'historical/CanESM5/r1i1p2f1/rss_Emon_CanESM5_historical_r1i1p2f1_gn_185001-201412.nc' 'http://aims3.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/CCCma/CanESM5/historical/r1i1p2f1/Emon/rss/gn/v20190429/rss_Emon_CanESM5_historical_r1i1p2f1_gn_185001-201412.nc' 'SHA256' '5f7e83cfc1be7b0e55474ecd533acc1aeea655bea716f2252f4794d3ff9cc6d1'
'historical/CNRM-CM6-1/r1i1p1f2/rss_Emon_CNRM-CM6-1_historical_r1i1p1f2_gr_185001-201412.nc' 'http://aims3.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/CNRM-CERFACS/CNRM-CM6-1/historical/r1i1p1f2/Emon/rss/gr/v20180917/rss_Emon_CNRM-CM6-1_historical_r1i1p1f2_gr_185001-201412.nc' 'SHA256' '36abb1a4182f2748226079a7932e37aaad3802d451a494c6de19b391213fb7cf'
'historical/CNRM-ESM2-1/r1i1p1f2/rss_Emon_CNRM-ESM2-1_historical_r1i1p1f2_gr_185001-201412.nc' 'http://aims3.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/CNRM-CERFACS/CNRM-ESM2-1/historical/r1i1p1f2/Emon/rss/gr/v20181206/rss_Emon_CNRM-ESM2-1_historical_r1i1p1f2_gr_185001-201412.nc' 'SHA256' '7d9a9f7c992a959f5e675c425ff076df99e1abc1ef3bfcc67ecae4c5ebe3caaa'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_185001-185012.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_185001-185012.nc' 'SHA256' '959b37c3b2a1528b87cf2cbfe0f53d63332d8ae03b2f6265ab72dbda95bf06fb'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_185101-185112.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_185101-185112.nc' 'SHA256' '2099043830d4fda2a0bce42407ee34dcf9a6409cbe2e0481ffe65b2ed4e924c4'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_185201-185212.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_185201-185212.nc' 'SHA256' 'e356cc74984b2ab5ca4600ee1a16ce207c1c674f8e3346d9e6638a434f1aa4c8'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_185301-185312.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_185301-185312.nc' 'SHA256' 'a378606354a8869cc65f9d0c09c25c7d116c329e4850485780e22c0b9945201d'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_185401-185412.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_185401-185412.nc' 'SHA256' '39ffd3f38a7b74b575188b3cd9f0c9fe7a939c8f46377cfe1535aac1ab4ac86e'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_185501-185512.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_185501-185512.nc' 'SHA256' 'a2424ddbd79d3d3fc1b83c1d3927230ad3b77aa136aea7309d658eb6170c4451'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_185601-185612.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_185601-185612.nc' 'SHA256' 'f0767c3ca3473fd58c3a636ffa6fcb7872891b1b2575fb1c9228641f2e12f287'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_185701-185712.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_185701-185712.nc' 'SHA256' 'eb86b9d682ca89d8074322b55fb14d33f292e5f4531d2e9d920a839b999f023c'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_185801-185812.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_185801-185812.nc' 'SHA256' '5b0ce6fbc102f176fe4854cc7ae4b2f265af1b9cfd02cace06ec8251b201ddfe'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_185901-185912.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_185901-185912.nc' 'SHA256' 'c8eb2771ef8f7e7f94e4575e75c22903382faf44c24d23a91b2c1ad13fd5486d'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_186001-186012.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_186001-186012.nc' 'SHA256' 'ea7f2b97b3addcb331ad100c43d6b30966c6228d00ed2d55f277b40a579d89f0'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_186101-186112.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_186101-186112.nc' 'SHA256' '6e247b859e845224f11a63431ff2f31ee489a112f8cf0b3cc5a9cad649933587'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_186201-186212.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_186201-186212.nc' 'SHA256' 'c15c9ff5ca2b255458a559593415052e1e79459d319a70f3c56456b52766150e'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_186301-186312.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_186301-186312.nc' 'SHA256' 'ddec01d3792c59dddae1bc296da5b180cfa6e9fda21ae96beab9bb3be890ab2e'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_186401-186412.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_186401-186412.nc' 'SHA256' '0bad12b09c6291117e972aeafae1fcc4b356099a68a7d3735e71231c98abc00c'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_186501-186512.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_186501-186512.nc' 'SHA256' '5baaf93836d8eaa5a65da00f45a9dc7767660c2078997d9d40a02778b34040fc'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_186601-186612.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_186601-186612.nc' 'SHA256' 'fc1c2a442a41fb82113ce4f7ea507df2e16120da5b0b7a1bc7b8c05efc18a2c2'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_186701-186712.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_186701-186712.nc' 'SHA256' '1d99b3e77fc68d3571353d26072096b0368363de1ce119a5aaa29c5d665477c5'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_186801-186812.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_186801-186812.nc' 'SHA256' '923a02a578d76100ef13fdfa7f49541a1e29d658819444c2dd8729ca5e953884'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_186901-186912.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_186901-186912.nc' 'SHA256' '309528d6a296584859d2d8e635b3f9c363a8e10b7e2d1ff57509038407511550'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_187001-187012.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_187001-187012.nc' 'SHA256' '1d5cba19c94ef21e96b896ef5258d91bdf46fe973a6eb1afa14fc0f327a0bd86'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_187101-187112.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_187101-187112.nc' 'SHA256' 'a906477ee381bb08d0bb89b91d93d43831dd6bf13a57240df3b278ff631c3512'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_187201-187212.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_187201-187212.nc' 'SHA256' '48cb756fbfb6ba414141b44533b3623ce55be4ac0db5d006502bf9a8a0334588'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_187301-187312.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_187301-187312.nc' 'SHA256' '8aeb32238a35c84c9de7d1fe45fb76667fd4e0d83c1ace5b728bc5f3ff7f17b7'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_187401-187412.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_187401-187412.nc' 'SHA256' '8852cb500231b8c7a3248f0d2232a9ba796bd71df5c66d84e9390ce895fcb6ac'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_187501-187512.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_187501-187512.nc' 'SHA256' '01a11182eebeafb7d54e942f46f96b681106a4274b27066bcd0eccdca2c8464a'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_187601-187612.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_187601-187612.nc' 'SHA256' '701606cfa68e4fe3b0e80348cbf28a15de4acdf52c600d06a6f176596b7feb41'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_187701-187712.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_187701-187712.nc' 'SHA256' 'da3dee885312dd5c4874f304bbd9c41b6fdd66dcbe2dea4f654d1c9799d4174d'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_187801-187812.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_187801-187812.nc' 'SHA256' '88480b79ef627bdeda84880295d64c403b16c6d96b6022ff3bb84183dea64e85'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_187901-187912.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_187901-187912.nc' 'SHA256' '0ca233796bcd932b8f6c70be52277770ee498d931bf92bddf6bf133d95652c51'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_188001-188012.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_188001-188012.nc' 'SHA256' 'dd1b74396d41edccde84b70132750a908cdc393cbfd7ff0b11f3dfdfce7fc0d6'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_188101-188112.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_188101-188112.nc' 'SHA256' 'f05e2282aaa9d2d1f864f565506132b5b17cc96137f6d73d9899154ca7f596c7'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_188201-188212.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_188201-188212.nc' 'SHA256' 'f1c76c31cbb8e66c06f3e7c29822dadf212f9316cf8930a73f76900b14ab10fd'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_188301-188312.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_188301-188312.nc' 'SHA256' '8988c48bdc3a422bd826ce3ae12f60860e36d394ad702dca2596d4b318df42b2'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_188401-188412.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_188401-188412.nc' 'SHA256' '280d4e78f3121fa1f4f886651bc80b0776f39d561d49af9abbd55eb44389802a'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_188501-188512.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_188501-188512.nc' 'SHA256' '84919456f33478ea999a13a811b2561ce1e3d55ef7fa9a7390e1b94c6478eb7d'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_188601-188612.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_188601-188612.nc' 'SHA256' '2f1e5628a9bc1108b34ea1fb7e0d8b72684861f270c38e2591c2e5a52de795f3'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_188701-188712.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_188701-188712.nc' 'SHA256' '8fc3519f32156c3774542eec4b01ff7b7923475016b155cfba11f9c0674e02e4'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_188801-188812.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_188801-188812.nc' 'SHA256' '1d01bb554af5e789827e172874f756bc06bf1448763229b483f7118c1fb44ff9'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_188901-188912.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_188901-188912.nc' 'SHA256' '3a73f84fb6c400c45f8a54328a4998a36c8a34bb14fe4b2e34583a7d129150c3'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_189001-189012.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_189001-189012.nc' 'SHA256' '25de10eb025efd5aa7420e9d32d19462d807e227b67d4be210cb6cc0e023a0d7'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_189101-189112.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_189101-189112.nc' 'SHA256' '1c1ed03ee293b3176649fb057cb7ba32ca9546eabc5701eed2a73bfcc545da91'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_189201-189212.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_189201-189212.nc' 'SHA256' '60e15defdce70439bcdc2a647b2a71c0e077420a4c042265d0d8fa1e14f6cdc7'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_189301-189312.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_189301-189312.nc' 'SHA256' 'd2b34a35162fc4abfff054379009e62c5a732777c1db4c6c4f465f157423d567'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_189401-189412.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_189401-189412.nc' 'SHA256' 'e6c78ad272bd29d5cafbf50d8fd049c8fcf606223a8a915af3db4815d2aff57b'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_189501-189512.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_189501-189512.nc' 'SHA256' '1b7c70f06046650a1d5d354af17723f683ccc5b9fdcd86dd24f63ed151d0f621'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_189601-189612.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_189601-189612.nc' 'SHA256' '508d9ab2fff3b8bbba73080869fa86086063d12a0ff4ebe9a427f7edca9f64c0'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_189701-189712.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_189701-189712.nc' 'SHA256' 'd561e4bd16e7b00bf95bb6adfe068e2ab73101e942c3ec7e1bae835f2d189041'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_189801-189812.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_189801-189812.nc' 'SHA256' '25014aa36af9e92e1f7b798c5cf648665b992dc0078dae2d7d1cd8bf2c3db86f'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_189901-189912.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_189901-189912.nc' 'SHA256' '9da26b576043a74a67cdee81682613a59f69b6a7f49c50b55450640aff7d1320'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_190001-190012.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_190001-190012.nc' 'SHA256' '6f707c5c47cc2dd6d6cb0ba65014e6435ba17534f8f72b8b48b48d2ea37ff40e'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_190101-190112.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_190101-190112.nc' 'SHA256' '6a1132fe986c0b18a0016e16303e17b522055422336800f407dc009462fb3481'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_190201-190212.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_190201-190212.nc' 'SHA256' '6e03288fca6176e16d5b64a286488805fb20a93ea140a9ad8746dca50788691e'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_190301-190312.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_190301-190312.nc' 'SHA256' '4422ffda0902e1afea312714397e91e1b820fe6cc97dd047de1684309c75a8b6'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_190401-190412.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_190401-190412.nc' 'SHA256' '21f91e644363019673cec39621c2162e879de411a9ae8e4c0ed2b7b05c2967e3'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_190501-190512.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_190501-190512.nc' 'SHA256' '83dcf861b3af615dce422cc1aa547a5ca91f07bb282825be556c188e3a6744c0'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_190601-190612.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_190601-190612.nc' 'SHA256' 'fc5c7dc668f6a22d3d1202b69d4ed186d60400b1f2f1399f344302cd5ae4d390'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_190701-190712.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_190701-190712.nc' 'SHA256' '81956da6aa9d695b131edd87251fc4defb0674f3f5efb77293ad712e2b3e3165'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_190801-190812.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_190801-190812.nc' 'SHA256' '4a96781f1451809d0ae52483dd7731134e49d5de66df4018bc45797b328edd18'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_190901-190912.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_190901-190912.nc' 'SHA256' '3cae2ae96b6065151820d6171d85d35e2c3817108bc205bc11eb58e610884abd'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_191001-191012.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_191001-191012.nc' 'SHA256' '8c265b584d3fb797f9505d0dea95d59ae2a61df696eb41300a3390430fbc7f6d'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_191101-191112.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_191101-191112.nc' 'SHA256' 'b5f4f6f92447615d4bcd7b6e8478401caccfaf9577769cb144f65aad65f6135b'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_191201-191212.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_191201-191212.nc' 'SHA256' '6514cedae159819dcb57df3b08e695c02b2270732f06f097c726515e990c2929'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_191301-191312.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_191301-191312.nc' 'SHA256' '4f8b53788f14e369e0033ef4771f8b62707a76d965221a5a28b64dfb1195147f'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_191401-191412.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_191401-191412.nc' 'SHA256' '19918b67eb30c5bcc24c7968dca17517cd135be1424168bdf4b921a32738d487'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_191501-191512.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_191501-191512.nc' 'SHA256' '8d836fda9d7f64c247f0df37d7d0577533e26b6c34544fb1bda747035ddf001f'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_191601-191612.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_191601-191612.nc' 'SHA256' 'e56c0e7696590cbf70de5768a7c80e458c762a65901c14d02555bb87d3c66ebd'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_191701-191712.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_191701-191712.nc' 'SHA256' '9fc3e6291d89da11b34f5b8e4eafb51040140c4233111667eb4084b9b4e05a20'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_191801-191812.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_191801-191812.nc' 'SHA256' '32b85de507bf0bc73577356c5585702d5051141ab550a42acf3c410e64f634a1'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_191901-191912.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_191901-191912.nc' 'SHA256' 'd70b738b387fc4f543aa7363fcdbeb70a689e40e7a8b7ac194ff97bbc32a9377'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_192001-192012.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_192001-192012.nc' 'SHA256' 'd2d469eb0240aae00d8aac6b6400e1ed920b44b7a577aa997ccfd0c78dcd06eb'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_192101-192112.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_192101-192112.nc' 'SHA256' '9db486ba1d03d71f7f07be85dccdbef1603a4181d57f30a4366a427207464172'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_192201-192212.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_192201-192212.nc' 'SHA256' '7dc67200a4c2babc008a36856e936058140fd0437af849844d0d8998ff4e4020'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_192301-192312.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_192301-192312.nc' 'SHA256' 'dc74d64fc9a34969c2acfbf17948f4c3f8b8603c46d69b0a5fca728f720bde1e'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_192401-192412.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_192401-192412.nc' 'SHA256' '1b43b9d2d3930531f5c9da562fe2241d64732529d8188d7409236d7e6541bc61'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_192501-192512.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_192501-192512.nc' 'SHA256' '1e94196d06add58906e9ff6450129c47ff7143c7dbc398a2cc7f9273dbdcce22'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_192601-192612.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_192601-192612.nc' 'SHA256' 'aba19c7b665b8257759d0fcfa2a2234598afc22ee3705d973d0be44877a5fb99'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_192701-192712.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_192701-192712.nc' 'SHA256' '075151f4e4498f296932b33d8d8e2461a2ee3941ee27f3f29d3762ee802d9b18'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_192801-192812.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_192801-192812.nc' 'SHA256' 'a34550f5b6a1eed9ab3dd97e136f4473ed96a521a47be7d1a871bbed44a378ec'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_192901-192912.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_192901-192912.nc' 'SHA256' '979f3e73bc3f9b6713510beb175c6a1b4bc1b37f457abdb2dfdbce3af1c2ebcf'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_193001-193012.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_193001-193012.nc' 'SHA256' 'af8308d268245ea926d7deace985e1a9ca4b791a0d731cd343cb559e2fa4df09'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_193101-193112.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_193101-193112.nc' 'SHA256' 'f8ba3ba54cb393482a5b0647cefe467fd7b5b75d11061932869b5d3d43c7804d'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_193201-193212.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_193201-193212.nc' 'SHA256' 'ccdcc1378dad17bd65f817de1ad82f88b48ec5b4d272c11419b517aea0b512c3'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_193301-193312.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_193301-193312.nc' 'SHA256' 'b71055e58c5b3484e8e12cf61b9112d4af37326ba58392b3c275ac2eb724079f'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_193401-193412.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_193401-193412.nc' 'SHA256' 'f1ceb4e9bfee66d782ca49dc9d5a8ff7642aece86c71aeae009b4073ac0984ea'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_193501-193512.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_193501-193512.nc' 'SHA256' '7ea97cada9edfddf52b3df05cb4eb22d61c34a764c389ec4956f8154d5fa75b1'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_193601-193612.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_193601-193612.nc' 'SHA256' '5f16eb62c7fe962631109f811794351627e14b470b64558e31319e06fa74d9cb'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_193701-193712.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_193701-193712.nc' 'SHA256' 'b696bf1435879e6a125bb62394a71b4e238c68ee84bfc322ebf3c37a25068102'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_193801-193812.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_193801-193812.nc' 'SHA256' 'a53167cfbcb6c21f581c2f37fd3d4297214ecc9e49d3860326007a690944ae5c'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_193901-193912.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_193901-193912.nc' 'SHA256' '68a53601e42e18068069d847eeb26c200222d3da2d4d5af6d3069590e95bcddb'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_194001-194012.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_194001-194012.nc' 'SHA256' '9c136c60f989dfca0bca81f28f9297092ddb51aa73adb3a9375593bad1e3e17d'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_194101-194112.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_194101-194112.nc' 'SHA256' 'fc26247f47a6633c34e828bb0be4d2c53d3549788af2cad5676bce08331ebd72'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_194201-194212.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_194201-194212.nc' 'SHA256' 'c60ccf2035ba6b8e915aaeeacd5a7b1ab30db55996baf227e4160dca8849bf1c'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_194301-194312.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_194301-194312.nc' 'SHA256' 'a1f48c69d8b8121c1f60a6ec5bc78b9530c98551c49458cad71981ee3d89d946'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_194401-194412.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_194401-194412.nc' 'SHA256' '954f07f0d3826eecec5789a5529c9075848d703df6204ccc60837c9786264963'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_194501-194512.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_194501-194512.nc' 'SHA256' 'ddc549c0849b29c7e398c2e6b01171a78e4711ab311f7b8b60ff3dad9c038e97'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_194601-194612.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_194601-194612.nc' 'SHA256' '37b0f1bdcb624ceb40eb670fdce9bb96caf4160238a1bf43784f81b9bf65ff5f'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_194701-194712.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_194701-194712.nc' 'SHA256' '6b923d1dc2d61f64a66f7b840d3bf3e363ffbedae1b48b06982ec8cfba456db1'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_194801-194812.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_194801-194812.nc' 'SHA256' '6ecc3065c526eda658f56b0daf287a86104fae82de4b33dccaa1e23250048d6d'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_194901-194912.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_194901-194912.nc' 'SHA256' '02cbc4d6f244ffe60435693b22c6b18811ceb26607a4cf7516687aaa62fb2d6d'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_195001-195012.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_195001-195012.nc' 'SHA256' 'db0778874d5b9bf638bf816350f0c3a23a15f6f95b1a239d4f551a1040a6fe67'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_195101-195112.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_195101-195112.nc' 'SHA256' 'c48c6c78c6403289da266f018c63accf8787e8ec6ae27fd2ca3b0f60e5e061a7'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_195201-195212.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_195201-195212.nc' 'SHA256' '32c874e0b676cd8fbf284204d4de18d68c653485fd47f33c287eeec7295ff02c'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_195301-195312.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_195301-195312.nc' 'SHA256' '5866203d3faaa3491bddfe38015befc210da7f61a8403fc2182dd2353a5e2975'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_195401-195412.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_195401-195412.nc' 'SHA256' '1a690b76cd37d0f9fdc7ae8c8818a6251e20689b4eceda2abe4836d30a28d3fd'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_195501-195512.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_195501-195512.nc' 'SHA256' '57e4bf793091b86846ee1513eacd8fbbb035f3a4c758ff0b7a59b3a3b69c093f'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_195601-195612.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_195601-195612.nc' 'SHA256' 'd017f9114c218ca4643d91301018a6b736143007429783019fd9854988df4ea1'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_195701-195712.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_195701-195712.nc' 'SHA256' '8d2cf88da9946e3b26749e79a43d7ba2969993a8c080c36fcc08b3c2fac2545c'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_195801-195812.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_195801-195812.nc' 'SHA256' 'bf023efc15a0f3355d0e56ca2d4a52cc14bd81bb2d3151c110c444885f958038'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_195901-195912.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_195901-195912.nc' 'SHA256' '763763d2dcad6b6a7b8eca3ad8eca71a2302a5f01edb54349a87247dce726969'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_196001-196012.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_196001-196012.nc' 'SHA256' 'bd01f2e5c29d7cfb14c184374f25b171c2a9e98ce3e9e1f7fa6f3d0801de4a70'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_196101-196112.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_196101-196112.nc' 'SHA256' '244f67ad032b8c3bc8bb217d8de0c3327e5eac67accb0641bf83d2ab29e0c9e6'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_196201-196212.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_196201-196212.nc' 'SHA256' '992a1f5647701bc6e153847221c39b1be53532cc5695f1c9a4f801b5bf24a214'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_196301-196312.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_196301-196312.nc' 'SHA256' '9281b574cfce90ae97ca5ab1979dc58aca3fad09cc93e1496aad2192fb965407'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_196401-196412.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_196401-196412.nc' 'SHA256' '412b5e79121b0ce34df9895f9e74b1d55a1f7441c0b3dd6adfc9296b524dbae4'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_196501-196512.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_196501-196512.nc' 'SHA256' 'f231f16466d9b15e9b0aa719495ecf57c9f2826a551f57925f6a7e3c2656debe'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_196601-196612.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_196601-196612.nc' 'SHA256' 'f3fc5bfdfd76d2bb2d694f5a06b4d2fdc2ada94b8d79b391620841e7a8021575'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_196701-196712.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_196701-196712.nc' 'SHA256' 'e90a6aba286d409a11770aeb8ddaafe5d4a6886f22b29702aaee06aff2ce7f23'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_196801-196812.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_196801-196812.nc' 'SHA256' '81408509ee60548f3027dc60d4ff1166301695fd57f5fb35facf335f6053fc1f'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_196901-196912.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_196901-196912.nc' 'SHA256' 'e0094d91fbe77c5adebe2592a35e835098693e81c26533db66e85c676a41f88a'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_197001-197012.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_197001-197012.nc' 'SHA256' '1c971eb3a9cc0fcc56bf1f7d8692a14f3462b85ee8c069b6119655d763fec793'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_197101-197112.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_197101-197112.nc' 'SHA256' '49b8389ea920f89f9db5a36755904c02e1ee1e1ffb44b7ba2820dda76c07d119'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_197201-197212.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_197201-197212.nc' 'SHA256' '067aafe7d95fe215ef3aa561510acde4202090153adfa3a24c55a75ee1e13be6'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_197301-197312.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_197301-197312.nc' 'SHA256' '082d28b70fb4200618c1533ccbd2dbe4f805b0bdddc909fee30b31d6ef3036e9'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_197401-197412.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_197401-197412.nc' 'SHA256' '2bb21cd2be614f7ea65b4d3dedf95d5ffe8a5a17834d1f4092e2af44cf624971'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_197501-197512.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_197501-197512.nc' 'SHA256' 'a68b6559fcefdb0d516425873f4b0eb0db7057e5977bbe25570850f815465be3'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_197601-197612.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_197601-197612.nc' 'SHA256' '29e19298d9f46a96031d0c79aa30c8161d6215d578563331d4d348490cc942e6'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_197701-197712.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_197701-197712.nc' 'SHA256' 'd76214951a8c508173a84c34a4b05d8805827e7740bb15a108a22b3e024a54ed'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_197801-197812.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_197801-197812.nc' 'SHA256' '3d7e61baeb26581f4ad9768c1ecaff37edc80da2814178b3030f06364a06e3ff'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_197901-197912.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_197901-197912.nc' 'SHA256' '83ea3b51a6827a44f94af2821e36c3cb95beba4c1a2edede18a211ff75bf21e3'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_198001-198012.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_198001-198012.nc' 'SHA256' 'de999d4e012cb124328969297364dc5848dd17296af5ada3271828b69b2f19c7'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_198101-198112.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_198101-198112.nc' 'SHA256' '7f51fdb7a9cc7d9395d9675b2e3605f99efa211125b51f449f41348dc98101c2'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_198201-198212.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_198201-198212.nc' 'SHA256' '2c71890d2af411debeab925bc56630f86e1e719469dd190e88aaf9bf973102d0'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_198301-198312.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_198301-198312.nc' 'SHA256' '48fae64e1384c71b98c14d5ecb0128f98720bc3ddcf3b748a9ab3e0a7a250836'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_198401-198412.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_198401-198412.nc' 'SHA256' '049c19b030a2a3b4f8881ba7c6fbe1e648c991b88d508121b2d4b90a4f3f1bc6'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_198501-198512.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_198501-198512.nc' 'SHA256' '8c753467d20f5ec6cbe8715b04413d9f82f8740b85dcf6eba343faad19f2257e'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_198601-198612.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_198601-198612.nc' 'SHA256' '303fba73041888d08fc9feaa1fe2993608ec67d9c6d3d12f1258da0d52e299b4'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_198701-198712.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_198701-198712.nc' 'SHA256' '337ba5e9500072b7337a1b5beeeec14a3316e8c6bc544311d82de4142dea83ea'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_198801-198812.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_198801-198812.nc' 'SHA256' 'e64721d6fb958c950eb14f0d4bfbc0c761b484867999d6acb0b62055624c0a60'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_198901-198912.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_198901-198912.nc' 'SHA256' '925febb2a91322dd5a93fc83177dbf8c2098ae6e30bfe0ad1a068496cfdbfefe'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_199001-199012.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_199001-199012.nc' 'SHA256' 'ab9b1c0d40648f49108533ccd793cf024b9a09b50cd2ee093d4482922aa28ef0'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_199101-199112.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_199101-199112.nc' 'SHA256' '728c81b5c8ea7fc75dc9f3527adac7c48800c9bffab037cbeaf2c9eef2da2a8f'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_199201-199212.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_199201-199212.nc' 'SHA256' 'bc38163bb710335a7bd1d91616c1b683f62a2ec6f347628549593ef6e61feb68'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_199301-199312.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_199301-199312.nc' 'SHA256' 'fa6f5a8375ccd236a02ec773996b6f559ff2923f16a2f7605348c16098f95e07'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_199401-199412.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_199401-199412.nc' 'SHA256' '780b97be7d87438b0d1a09f11d70f90005b3ec71c590bb3a741e0b21dde84c76'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_199501-199512.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_199501-199512.nc' 'SHA256' 'f9cbb3843b2c8d77fd1a72f3df1bc218242cf9aecc7ad3ae3a902f54ec1566f2'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_199601-199612.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_199601-199612.nc' 'SHA256' '25f5319d49854d4e6b9d408e9f01a42932f1b5bca7d8881a4fec007979281e30'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_199701-199712.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_199701-199712.nc' 'SHA256' '5909ac87fa7bd627282a356c20a517bedab18654aedaf3b8d52792d9b3f61df5'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_199801-199812.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_199801-199812.nc' 'SHA256' '0c1294a43dc32a4ac99c34b2cc0d54fad4e92caa548b1c755a48b5d66af49932'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_199901-199912.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_199901-199912.nc' 'SHA256' '467b04ea1611b0373ed971b4119f50cb7fde302093e84014e1ed4bcc5ed5b948'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_200001-200012.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_200001-200012.nc' 'SHA256' '37c1a6d6d0bdbd81821e2f086419568462650899ca77e206dfb852275ba65db7'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_200101-200112.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_200101-200112.nc' 'SHA256' '5a796bbbe36553cc21ceb9295f01864e563f0333438d93c0c256d8c60fcf0da6'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_200201-200212.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_200201-200212.nc' 'SHA256' '2a8e659efb8922252521bf90a4dcc23024802081cf6450fe27d42860ca6455f9'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_200301-200312.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_200301-200312.nc' 'SHA256' 'a882535627ec8551208ab8a7b5b9d690fa98be9ca490be805bee0aaac17a50e3'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_200401-200412.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_200401-200412.nc' 'SHA256' '0774984200106e39a81bd4af5c1dfd095f4975054c816ababd91c3f6b53267f8'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_200501-200512.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_200501-200512.nc' 'SHA256' 'a91945decb84470d9e82752773a6b733019baadb9d15283ae07a3594fbd90e5f'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_200601-200612.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_200601-200612.nc' 'SHA256' '2ac7fbde313c7b7dfbb60dccff3fafcbc0419c043868db1b783fe91268d97608'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_200701-200712.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_200701-200712.nc' 'SHA256' '63ccbb57f018ce55de9aaebbf64b074d1c498ae0bdba3765cfb17eb50dd66d45'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_200801-200812.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_200801-200812.nc' 'SHA256' '9d73c975a072f86fd555d60bc0b5b5a0d475ef2a0c3767741bfab32eb1dd8b5d'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_200901-200912.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_200901-200912.nc' 'SHA256' '66c31babe2ae9a063dbfad6ea9ecfc3b0552fdb3c3493506b02dc173a4a0eab4'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_201001-201012.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_201001-201012.nc' 'SHA256' '824aafd4cfd912a397b21f4ce2d2ec5914a60432cd595e5279523afbcb3c83fd'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_201101-201112.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_201101-201112.nc' 'SHA256' '3636c7a4af4b428bed6d35cf845476b7cc1de15d284556a0d27107d9c6487039'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_201201-201212.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_201201-201212.nc' 'SHA256' 'f6918526a65148abf5faaec078d800bc37018596727809178360091efd7d7fa0'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_201301-201312.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_201301-201312.nc' 'SHA256' '63141758d8cead545f6d217a3dc198a26c16584c6e435c34d7f353102e2a4d0e'
'historical/EC-Earth3/r1i1p1f1/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_201401-201412.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Emon/rss/gr/v20190926/rss_Emon_EC-Earth3_historical_r1i1p1f1_gr_201401-201412.nc' 'SHA256' 'f701cb89c5371cc27ca531124ab5fb0179ac297bfeb43b4b1bdbe70d189a2a57'
'historical/IPSL-CM6A-LR/r1i1p1f1/rss_Emon_IPSL-CM6A-LR_historical_r1i1p1f1_gr_185001-201412.nc' 'http://aims3.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/IPSL/IPSL-CM6A-LR/historical/r1i1p1f1/Emon/rss/gr/v20180803/rss_Emon_IPSL-CM6A-LR_historical_r1i1p1f1_gr_185001-201412.nc' 'SHA256' 'f88cb8279681eb4a90dabce67cd5841e537b61219b16fe0d5064b74fbfb705c3'
'historical/MIROC-ES2L/r1i1p1f2/rss_Emon_MIROC-ES2L_historical_r1i1p1f2_gn_185001-201412.nc' 'http://aims3.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1p1f2/Emon/rss/gn/v20190823/rss_Emon_MIROC-ES2L_historical_r1i1p1f2_gn_185001-201412.nc' 'SHA256' '1db64a9dbf4edeacf941869a5b7c56ad0fb6eae83ad415281e72bd346c689d49'
'historical/HadGEM3-GC31-LL/r1i1p1f3/rss_Emon_HadGEM3-GC31-LL_historical_r1i1p1f3_gn_185001-194912.nc' 'http://aims3.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MOHC/HadGEM3-GC31-LL/historical/r1i1p1f3/Emon/rss/gn/v20190624/rss_Emon_HadGEM3-GC31-LL_historical_r1i1p1f3_gn_185001-194912.nc' 'SHA256' '54966dbc3d6dc3d6ea85e7a2e660bc7dbcf1e9b6d69df5f2b0972b436c9839b1'
'historical/HadGEM3-GC31-LL/r1i1p1f3/rss_Emon_HadGEM3-GC31-LL_historical_r1i1p1f3_gn_195001-201412.nc' 'http://aims3.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MOHC/HadGEM3-GC31-LL/historical/r1i1p1f3/Emon/rss/gn/v20190624/rss_Emon_HadGEM3-GC31-LL_historical_r1i1p1f3_gn_195001-201412.nc' 'SHA256' '5604cb780c4bead01c7de27fc857645e6668241a9df5647d4dd54ba5b44d5163'
'historical/UKESM1-0-LL/r1i1p1f2/rss_Emon_UKESM1-0-LL_historical_r1i1p1f2_gn_185001-194912.nc' 'http://aims3.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MOHC/UKESM1-0-LL/historical/r1i1p1f2/Emon/rss/gn/v20190627/rss_Emon_UKESM1-0-LL_historical_r1i1p1f2_gn_185001-194912.nc' 'SHA256' '14660003c70081ab2b34bc81fa0f20e5c7774d67b67a41fcb6936bef70010e71'
'historical/UKESM1-0-LL/r1i1p1f2/rss_Emon_UKESM1-0-LL_historical_r1i1p1f2_gn_195001-201412.nc' 'http://aims3.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MOHC/UKESM1-0-LL/historical/r1i1p1f2/Emon/rss/gn/v20190627/rss_Emon_UKESM1-0-LL_historical_r1i1p1f2_gn_195001-201412.nc' 'SHA256' '9903192eb6e7a6cdcfeec7e7a23756c2238c69f4bc5b08eb799d3fc27fc49bc0'
'historical/CESM2-WACCM/r1i1p1f1/rss_Emon_CESM2-WACCM_historical_r1i1p1f1_gn_185001-201412.nc' 'http://aims3.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/NCAR/CESM2-WACCM/historical/r1i1p1f1/Emon/rss/gn/v20190227/rss_Emon_CESM2-WACCM_historical_r1i1p1f1_gn_185001-201412.nc' 'SHA256' '4465dd9a68f4ef224ad94f4fe369f78dd7f37e01962248c9ad10a0bc1e086fd1'
'historical/CESM2/r1i1p1f1/rss_Emon_CESM2_historical_r1i1p1f1_gn_185001-201412.nc' 'http://aims3.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/NCAR/CESM2/historical/r1i1p1f1/Emon/rss/gn/v20190308/rss_Emon_CESM2_historical_r1i1p1f1_gn_185001-201412.nc' 'SHA256' 'b705e29f57e802ada8be1267f9d9af2ee553b41167bf8e812ea8e07c473b5fad'
EOF--dataset.file.url.chksum_type.chksum
)"

# ESG_HOME should point to the directory containing ESG credentials.
#   Default is $HOME/.esg
ESG_HOME=${ESG_HOME:-$HOME/.esg}
[[ -d $ESG_HOME ]] || mkdir -p $ESG_HOME

ESG_CREDENTIALS=${X509_USER_PROXY:-$ESG_HOME/credentials.pem}
ESG_CERT_DIR=${X509_CERT_DIR:-$ESG_HOME/certificates}
MYPROXY_STATUS=$HOME/.MyProxyLogon
COOKIE_JAR=$ESG_HOME/cookies
MYPROXY_GETCERT=$ESG_HOME/getcert.jar
CERT_EXPIRATION_WARNING=$((60 * 60 * 8))   #Eight hour (in seconds)

WGET_TRUSTED_CERTIFICATES=$ESG_HOME/certificates


# Configure checking of server SSL certificates.
#   Disabling server certificate checking can resolve problems with myproxy
#   servers being out of sync with datanodes.
CHECK_SERVER_CERT=${CHECK_SERVER_CERT:-Yes}

check_os() {
    local os_name=$(uname | awk '{print $1}')
    case ${os_name} in
        Linux)
            ((debug)) && echo "Linux operating system detected"
            LINUX=1
            MACOSX=0
            ;;
        Darwin)
            ((debug)) && echo "Mac OS X operating system detected"
            LINUX=0
            MACOSX=1
            ;;
        *)
            echo "Unrecognized OS [${os_name}]"
            return 1
            ;;
    esac
    return 0
}

#taken from http://stackoverflow.com/a/4025065/1182464
vercomp () {
    if [[ $1 == $2 ]]
    then
        return 0
    fi
    local IFS=.
    local i ver1=($1) ver2=($2)
    # fill empty fields in ver1 with zeros
    for ((i=${#ver1[@]}; i<${#ver2[@]}; i++))
    do
        ver1[i]=0
    done
    for ((i=0; i<${#ver1[@]}; i++))
    do
        if [[ -z ${ver2[i]} ]]
        then
            # fill empty fields in ver2 with zeros
            ver2[i]=0
        fi
        if ((10#${ver1[i]} > 10#${ver2[i]}))
        then
            return 1
        fi
        if ((10#${ver1[i]} < 10#${ver2[i]}))
        then
            return 2
        fi
    done
    return 0
}

check_commands() {
    #check wget
    local MIN_WGET_VERSION=1.10
    vercomp $(wget -V | sed -n 's/^.* \([1-9]\.[0-9.]*\) .*$/\1/p') $MIN_WGET_VERSION
    case $? in
        2) #lower
            wget -V
            echo
            echo "** ERROR: wget version is too old. Use version $MIN_WGET_VERSION or greater. **" >&2
            exit 1
    esac
}

usage() {
    echo "Usage: $(basename $0) [flags] [openid] [username]"
    echo "Flags is one of:"
    sed -n '/^while getopts/,/^done/  s/^\([^)]*\)[^#]*#\(.*$\)/\1 \2/p' $0
    echo
    echo "This command stores the states of the downloads in .$0.status"
    echo "For more information check the website: http://esgf.org/wiki/ESGF_wget"
}

#defaults
debug=0
clean_work=1

#parse flags
while getopts ':c:pfF:o:w:isuUndvqhHI:T' OPT; do
    case $OPT in
        H) skip_security=1 && use_http_sec=1;; #       : Authenticate with OpenID (username,) and password, without the need for a certificate.
        T) force_TLSv1=1;;              #       : Forces wget to use TLSv1. 
        c) ESG_CREDENTIALS="$OPTARG";;  #<cert> : use this certificate for authentication.
        f) force=1;;                    #       : force certificate retrieval (defaults to only once per day); for certificate-less authentication (see -H option), this flag will force login and refresh cookies.
        F) input_file="$OPTARG";;       #<file> : read input from file instead of the embedded one (use - to read from stdin)
        o) openId="$OPTARG";;           #<openid>: Provide OpenID instead of interactively asking for it.
        I) username_supplied="$OPTARG";;    #<user_id> : Explicitly set user ID.  By default, the user ID is extracted from the last component of the OpenID URL.  Use this flag to override this behaviour.                   
        w) output="$OPTARG";;           #<file> : Write embedded files into a file and exit
        i) insecure=1;;                 #       : set insecure mode, i.e. don't check server certificate
        s) skip_security=1 && use_cookies_for_http_basic_auth_start=1;;            #       : completely skip security. It will only work if the accessed data is not secured at all. -- works only if the accessed data is unsecured or a certificate exists or cookies are saved (latter applies to -H option only).
        u) update=1;;                   #       : Issue the search again and see if something has changed.
        U) update_files=1;;             #       : Update files from server overwriting local ones (detect with -u)
        n) dry_run=1;;                  #       : Don't download any files, just report.
        p) clean_work=0;;               #       : preserve data that failed checksum
        d) verbose=1;debug=1;;          #       : display debug information
        v) verbose=1;;                  #       : be more verbose
        q) quiet=1;;                    #       : be less verbose
        h) usage && exit 0;;            #       : displays this help
        \?) echo "Unknown option '$OPTARG'" >&2 && usage && exit 1;;
        \:) echo "Missing parameter for flag '$OPTARG'" >&2 && usage && exit 1;;
    esac
done
shift $(($OPTIND - 1))

#setup input as desired by the user
if [[ "$input_file" ]]; then
    if [[ "$input_file" == '-' ]]; then
        download_files="$(cat)" #read from STDIN
        exec 0</dev/tty #reopen STDIN as cat closed it
    else
        download_files="$(cat $input_file)" #read from file
    fi
fi

#if -w (output) was selected write file and finish:
if [[ "$output" ]]; then
    #check the file
    if [[ -f "$output" ]]; then
        read -p "Overwrite existing file $output? (y/N) " answ
        case $answ in y|Y|yes|Yes);; *) echo "Aborting then..."; exit 0;; esac
    fi
    echo "$download_files">$output
    exit
fi


#assure we have everything we need
check_commands

if ((update)); then
    echo "Checking the server for changes..."
    new_wget="$(wget "$search_url" -qO -)"
    compare_cmd="grep -vE '^(# Generated by|# Search URL|search_url=)'"
    if diff -q <(eval $compare_cmd<<<"$new_wget") <(eval $compare_cmd $0) >/dev/null; then
        echo "No changes detected."
    else
        echo "Wget was changed. Dowloading. (old renamed to $0.old.#N)"
        counter=0
        while [[ -f $0.old.$counter ]]; do ((counter++)); done
        mv $0 $0.old.$counter
        echo "$new_wget" > $0
    fi
    exit 0      
fi


##############################################################################
check_java() {
    if ! type java >& /dev/null; then
        echo "Java could not be found." >&2
        return 1
    fi
    if java -version 2>&1|grep openjdk >/dev/null; then
        openjdk=1;
    else
        openjdk=0;
    fi
    jversion=($(jversion=$(java -version 2>&1 | awk '/version/ {gsub("\"","");print $3}'); echo ${jversion//./ }))
    mVer=${jversion[1]}
    if [ $openjdk -eq 1 ]; then
        mVer=${jversion[0]}
        if ((mVer<5)); then
            echo "Openjdk detected. Version 9+ is required for retrieving the certificate." >&2
            echo "Current version seems older: $(java -version | head -n1) " >&2
            return 1
        fi
    else
    
        if ((mVer<5)); then
            echo "Java version 1.5+ is required for retrieving the certificate." >&2
            echo "Current version seems older: $(java -version | head -n1) " >&2
            return 1
        fi
    fi
}

check_myproxy_logon() {
    if ! type myproxy-logon >& /dev/null; then
	echo "myproxy-logon could not be found." >&2
	return 1
    fi
    echo "myproxy-logon found" >&2
}

proxy_to_java() {
    local proxy_user proxy_pass proxy_server proxy_port
    eval $(sed 's#^\(https\?://\)\?\(\([^:@]*\)\(:\([^@]*\)\)\?@\)\?\([^:/]*\)\(:\([0-9]*\)\)\?.*#proxy_user=\3;proxy_pass=\5;proxy_server=\6;proxy_port=\8#'<<<$http_proxy)
    local JAVA_PROXY=
    [[ "$proxy_server" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttp.proxyHost=$proxy_server"
    [[ "$proxy_port" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttp.proxyPort=$proxy_port"
    eval $(sed 's#^\(https\?://\)\?\(\([^:@]*\)\(:\([^@]*\)\)\?@\)\?\([^:/]*\)\(:\([0-9]*\)\)\?.*#proxy_user=\3;proxy_pass=\5;proxy_server=\6;proxy_port=\8#'<<<$https_proxy)
    [[ "$proxy_server" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttps.proxyHost=$proxy_server"
    [[ "$proxy_port" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttps.proxyPort=$proxy_port"
    
    echo "$JAVA_PROXY"
}

# get certificates from github
get_certificates() {
    # don't if this was already done today
    [[ -z $force && "$(find $ESG_CERT_DIR -type d -mtime -1 2>/dev/null)" ]] && return 0
    echo -n "Retrieving Federation Certificates..." >&2

    if ! wget -O $ESG_HOME/esg-truststore.ts --no-check-certificate https://github.com/ESGF/esgf-dist/raw/master/installer/certs/esg-truststore.ts; then
        echo "Could not fetch esg-truststore";
        return 1
    fi
    
    if ! wget --no-check-certificate https://raw.githubusercontent.com/ESGF/esgf-dist/master/installer/certs/esg_trusted_certificates.tar -O - -q | tar x -C $ESG_HOME; then
        #certificates tarred into esg_trusted_certificates. (if it breaks, let the user know why
        wget --no-check-certificate https://raw.githubusercontent.com/ESGF/esgf-dist/master/installer/certs/esg_trusted_certificates.tar
        echo "Could't update certs!" >&2
        return 1
    else
        #if here everythng went fine. Replace old cert with this ones    
        [[ -d $ESG_CERT_DIR ]] && rm -r $ESG_CERT_DIR || mkdir -p $(dirname $ESG_CERT_DIR)
        mv $ESG_HOME/esg_trusted_certificates $ESG_CERT_DIR
        touch $ESG_CERT_DIR
        echo "done!" >&2
    fi

}

# Retrieve ESG credentials
unset pass
get_credentials() {
    if check_java
    then
	use_java=1
    else	
	use_java=0
	echo "No suitable java for obtaining certificate - checking for myproxy-logon instead" >&2
	check_myproxy_logon || exit 1
    fi
    #get all certificates
    get_certificates

    if [[ -z "$(find $MYPROXY_GETCERT -type f -mtime -1 2>/dev/null)" ]]; then
        echo -n "(Downloading $MYPROXY_GETCERT... "
        mkdir -p $(dirname $MYPROXY_GETCERT)
        if wget -q --no-check-certificate https://raw.githubusercontent.com/ESGF/esgf-dist/master/installer/certs/getcert.jar -O $MYPROXY_GETCERT;then
            echo 'done)'
            touch $MYPROXY_GETCERT
        else
            echo 'failed)'
        fi
    fi

    #if the user already defined one, use it
    if [[ -z $openId ]]; then
        #try to parse the last valid value if any
        [[ -f "$MYPROXY_STATUS" ]] && openId=$(awk -F= '/^OpenID/ {gsub("\\\\", ""); print $2}' $MYPROXY_STATUS)
        if [[ -z $openId ]]; then
            #no OpenID, we need to ask the user
            echo -n "Please give your OpenID (Example: https://myserver/example/username) ? "
        else
            #Allow the user to change it if desired
            echo -n "Please give your OpenID (hit ENTER to accept default: $openId)? "
        fi
        read -e
        [[ "$REPLY" ]] && openId="$REPLY"
    else
        ((verbose)) && echo "Using user defined OpenID $openId (to change use -o <open_id>)"
    fi

    if grep -q ceda.ac.uk <<<$openId; then
        username=${openId##*/}
        echo -n "Please give your username if different [$username]: "
        read -e
        [[ "$REPLY" ]] && username="$REPLY"
    fi
    


    if [ $use_java -eq 1 ]
    then
        local args=
        #get password
	[[ ! "$pass" ]] && read -sp "MyProxy Password? " pass
        [[ "$openId" ]] && args=$args" --oid $openId"
        [[ "$pass" ]] && args=$args" -P $pass"
        [[ "$username" ]] && args=$args" -l $username"
        
        echo -n $'\nRetrieving Credentials...' >&2
        if ! java $(proxy_to_java) -jar $MYPROXY_GETCERT $args --ca-directory $ESG_CERT_DIR --output $ESG_CREDENTIALS ; then        
            echo "Certificate could not be retrieved"
            exit 1
        fi
        echo "done!" >&2
    else
        args=`openid_to_myproxy_args $openId $username` || exit 1
        if ! myproxy-logon $args -b -o $ESG_CREDENTIALS
	then
            echo "Certificate could not be retrieved"
	    exit 1
        fi
	cp $HOME/.globus/certificates/* $ESG_CERT_DIR/	
    fi
}

openid_to_myproxy_args() {
  python - <<EOF || exit 1
import sys
import re
import xml.etree.ElementTree as ET
import urllib2
openid = "$1"
username = "$2" or re.sub(".*/", "", openid)
e = ET.parse(urllib2.urlopen(openid))
servs = [el for el in e.getiterator() if el.tag.endswith("Service")]
for serv in servs:
    servinfo = dict([(re.sub(".*}", "", c.tag), c.text)
                     for c in serv.getchildren()])
    try:
        if servinfo["Type"].endswith("myproxy-service"):
            m = re.match("socket://(.*):(.*)", servinfo["URI"])
            if m:
                host = m.group(1)
                port = m.group(2)
                print "-s %s -p %s -l %s" % (host, port, username)
                break
    except KeyError:
        continue
else:
    sys.stderr.write("myproxy service could not be found\n")
    sys.exit(1)
EOF
}

# check the certificate validity
check_cert() {
    if [[ ! -f "$ESG_CERT" || $force ]]; then
        #not there, just get it
        get_credentials
    elif which openssl &>/dev/null; then
        #check openssl and certificate
        if ! openssl x509 -checkend $CERT_EXPIRATION_WARNING -noout -in $ESG_CERT 2>/dev/null; then
            echo "The certificate expires in less than $((CERT_EXPIRATION_WARNING / 60 / 60)) hour(s). Renewing..."
            get_credentials
        else
            #ok, certificate is fine
            return 0
        fi
    fi
}

#
# Detect ESG credentials
#
find_credentials() {

    #is X509_USER_PROXY or $HOME/.esg/credential.pem
    if [[ -f "$ESG_CREDENTIALS" ]]; then
        # file found, proceed.
        ESG_CERT="$ESG_CREDENTIALS"
        ESG_KEY="$ESG_CREDENTIALS"
    elif [[ -f "$X509_USER_CERT" && -f "$X509_USER_KEY" ]]; then
        # second try, use these certificates.
        ESG_CERT="$X509_USER_CERT"
        ESG_KEY="$X509_USER_KEY"
    else
        # If credentials are not present, just point to where they should go 
        echo "No ESG Credentials found in $ESG_CREDENTIALS" >&2
            ESG_CERT="$ESG_CREDENTIALS"
            ESG_KEY="$ESG_CREDENTIALS"
            #they will be retrieved later one
    fi


    #chek openssl and certificate
    if (which openssl &>/dev/null); then
        if ( openssl version | grep 'OpenSSL 1\.0' ); then
            echo '** WARNING: ESGF Host certificate checking might not be compatible with OpenSSL 1.0+'
        fi
        check_cert || { (($?==1)); exit 1; }
    fi
    
    if [[ $CHECK_SERVER_CERT == "Yes" ]]; then
        [[ -d "$ESG_CERT_DIR" ]] || { echo "CA certs not found. Aborting."; exit 1; }
        PKI_WGET_OPTS="--ca-directory=$ESG_CERT_DIR"
    fi

    #some wget version complain if there's no file present
    [[ -f $COOKIE_JAR ]] || touch $COOKIE_JAR

    PKI_WGET_OPTS="$PKI_WGET_OPTS --certificate=$ESG_CERT --private-key=$ESG_KEY --save-cookies=$COOKIE_JAR --load-cookies=$COOKIE_JAR --ca-certificate=$ESG_CERT"

}

check_chksum() {
    local file="$1"
    local chk_type=$2
    local chk_value=$3
    local local_chksum=Unknown

    case $chk_type in
        md5) local_chksum=$(md5sum_ $file | cut -f1 -d" ");;
        sha256) local_chksum=$(sha256sum_ $file|awk '{print $1}'|cut -d ' ' -f1);;
        *) echo "Can't verify checksum." && return 0;;
    esac

    #verify
    ((debug)) && echo "local:$local_chksum vs remote:$chk_value" >&2
    echo $local_chksum
}

#Our own md5sum function call that takes into account machines that don't have md5sum but do have md5 (i.e. mac os x)
md5sum_() {
    hash -r
    if type md5sum >& /dev/null; then
        echo $(md5sum $@)
    else
        echo $(md5 $@ | sed -n 's/MD5[ ]*\(.*\)[^=]*=[ ]*\(.*$\)/\2 \1/p')
    fi
}

#Our own sha256sum function call that takes into account machines that don't have sha256sum but do have sha2 (i.e. mac os x)
sha256sum_() {
    hash -r
    if type sha256sum >& /dev/null; then
        echo $(sha256sum $@)
    elif type shasum >& /dev/null; then
        echo $(shasum -a 256 $@)
    else
        echo $(sha2 -q -256 $@)
    fi
}

get_mod_time_() {
    if ((MACOSX)); then
        #on a mac modtime is stat -f %m <file>
        echo "$(stat -f %m $@)"
    else
        #on linux (cygwin) modtime is stat -c %Y <file>
        echo "$(stat -c %Y $@)"
    fi
    return 0;
}

remove_from_cache() {
    local entry="$1"
    local tmp_file="$(grep -ve "^$entry" "$CACHE_FILE")"
    echo "$tmp_file" > "$CACHE_FILE"
    unset cached
}

#Download data from node using cookies and not certificates.
download_http_sec()
{
  #The data to be downloaded.
  data=" $url"
  filename="$file"  

  #Wget args.
  if ((insecure)) 
  then
   wget_args=" --no-check-certificate --cookies=on  --keep-session-cookies --save-cookies $COOKIES_FOLDER/wcookies.txt " 
  else
   wget_args=" --ca-directory=$WGET_TRUSTED_CERTIFICATES --cookies=on --keep-session-cookies --save-cookies $COOKIES_FOLDER/wcookies.txt "  
  fi 

  if ((use_cookies_for_http_basic_auth_start)) || ((use_cookies_for_http_basic_auth)) 
  then
   wget_args=" $wget_args"" --load-cookies $COOKIES_FOLDER/wcookies.txt"    
  fi
  
  if((force_TLSv1))
  then
   wget_args=" $wget_args"" --secure-protocol=TLSv1 "
  fi
  
  
  if [[ ! -z "$ESGF_WGET_OPTS" ]]
  then
    wget_args="$wget_args $ESGF_WGET_OPTS"
  fi  
  

  #use cookies for the next downloads
  use_cookies_for_http_basic_auth=1;
   
  #Debug message.
  if  ((debug))
  then
   echo -e "\nExecuting:\n"
   echo -e "wget $wget_args $data\n"
  fi


  #Try to download the data. 
  command="wget $wget_args -O $filename $data"
  http_resp=$(eval $command  2>&1) 
  cmd_exit_status="$?"
  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi
      
  #Extract orp service from url ?
  #Evaluate response.
  #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
  #(( "$redirects" == 1 )) && 
  if  echo "$http_resp" | grep -q "/esg-orp/"      
  then
   urls=$(echo "$http_resp" | egrep -o 'https://[^ ]+' | cut -d'/' -f 3)
   orp_service=$(echo "$urls" | tr '\n' ' ' | cut -d' ' -f 2)


   #Use cookies for transaction with orp.
   wget_args=" $wget_args"" --load-cookies $COOKIES_FOLDER/wcookies.txt"    
   
   #Download data using either http basic auth or http login form.
   if [[ "$openid_c" == */openid/  || "$openid_c" == */openid ]]
   then
    download_http_sec_open_id
   else
    download_http_sec_decide_service
   fi
  else  
   if    echo "$http_resp" | grep -q "401 Unauthorized"  \
      || echo "$http_resp" | grep -q "403: Forbidden"  \
      || echo "$http_resp" | grep -q "Connection timed out."  \
      || echo "$http_resp" | grep -q "no-check-certificate"  \
      || (( $cmd_exit_status != 0 ))      
   then 
    echo "ERROR : http request to OpenID Relying Party service failed."
    failed=1
   fi
  fi
}


#Function that decides which implementaion of idp to use.
download_http_sec_decide_service()
{
  #find claimed id

  pos=$(echo "$openid_c" | egrep -o '/' | wc -l)
  username_c=$(echo "$openid_c"  | cut -d'/' -f "$(($pos + 1))")
  esgf_uri=$(echo "$openid_c" | egrep -o '/esgf-idp/openid/')

  host=$(echo "$openid_c"  | cut -d'/' -f 3)
  #test ceda first.

  if [[ -z "$esgf_uri" ]]
  then
   openid_c_tmp="https://""$host""/openid/"
  else
   openid_c_tmp="https://""$host""/esgf-idp/openid/" 
  fi

  command="wget "$openid_c_tmp" --no-check-certificate ${force_TLSv1:+--secure-protocol=TLSv1} -O-"
        
  if [[ ! -z "$ESGF_WGET_OPTS" ]]
  then
   command="$command $ESGF_WGET_OPTS"
  fi  
          
  #Debug message.
  if  ((debug))
  then
   echo -e "\nExecuting:\n"
   echo -e "$command\n"
  fi
            

  #Execution of command.
  http_resp=$(eval $command  2>&1)
  cmd_exit_status="$?"
  
  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi 
  

  if    echo "$http_resp" | grep -q "[application/xrds+xml]"  \
     && echo "$http_resp" | grep -q "200 OK"  \
     && (( cmd_exit_status == 0 ))       
  then
   openid_c=$openid_c_tmp
   download_http_sec_open_id
  else
   if [[ -z "$esgf_uri" ]]
   then
    echo "ERROR : HTTP request to OpenID Relying Party service failed."
    failed=1
   else
   download_http_sec_cl_id
   fi
  fi
}


download_http_sec_retry()
{
  echo -e "\nRetrying....\n"
  #Retry in case that last redirect did not work, this happens with older version of wget.
  command="wget $wget_args $data"
      
  #Debug message.
  if  ((debug))
  then
   echo -e "Executing:\n"
   echo -e "$command\n"
  fi   
   
  http_resp=$(eval $command  2>&1) 
  cmd_exit_status="$?"

  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi
   
  if    echo "$http_resp" | grep -q "401 Unauthorized"  \
     || echo "$http_resp" | grep -q "403: Forbidden"  \
     || echo "$http_resp" | grep -q "Connection timed out."  \
     || echo "$http_resp" | grep -q "no-check-certificate"  \
     || (( $cmd_exit_status != 0 ))      
  then 
   echo -e "\nERROR : Retry failed.\n"
   #rm "$filename"
   failed=1
  fi #if retry failed.
}

#Function for downloading data using the claimed id.
download_http_sec_cl_id()
{
  #Http request for sending openid to the orp service.
  command="wget --post-data \"openid_identifier=$openid_c&rememberOpenid=on\"  $wget_args -O- https://$orp_service/esg-orp/j_spring_openid_security_check.htm "

  #Debug message.
  if  ((debug))
  then
   echo -e "Executing:\n"
   echo -e "wget $command\n"
  fi 
  
  
  #Execution of command.
  http_resp=$(eval $command  2>&1)
  cmd_exit_status="$?"

  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi 
    
  
  #Extract orp service from openid ?
  #Evaluate response.If redirected to idp service send the credentials.
  #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
  #(( redirects == 2  )) && 
  if  echo "$http_resp" | grep -q "login.htm"  && (( cmd_exit_status == 0 ))   
  then 
  
   urls=$(echo "$http_resp" | egrep -o 'https://[^ ]+' | cut -d'/' -f 3)
   idp_service=$(echo "$urls"  | tr '\n' ' ' | cut -d' ' -f 2) 
      
   command="wget --post-data  password=\"$password_c\" $wget_args ${quiet:+-q} ${quiet:--v} -O $filename https://$idp_service/esgf-idp/idp/login.htm"
   

   #Debug message.
   if  ((debug))
   then
    echo -e "Executing:\n"
    echo -e "wget $command\n"
   fi 

   #Execution of command.
   http_resp=$(eval $command  2>&1)
   cmd_exit_status="$?"
      
   if ((debug))
   then
    echo -e "\nHTTP response:\n $http_resp\n"
   fi 
        
   #Evaluate response. 
   #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
   #(( "$redirects" != 5 )) \ 
   if    echo "$http_resp" | grep -q "text/html"  \
      || echo "$http_resp" | grep -q "403: Forbidden"  \
      || (( cmd_exit_status != 0 ))        
   then 
    rm "$filename"
    download_http_sec_retry
   fi
 
  else
   echo "ERROR : HTTP request to OpenID Provider service failed."
   failed=1
  fi #if redirected to idp.  
}



download_http_sec_open_id()
{
  #Http request for sending openid to the orp web service.
  command="wget --post-data \"openid_identifier=$openid_c&rememberOpenid=on\" --header=\"esgf-idea-agent-type:basic_auth\" --http-user=\"$username_c\" --http-password=\"$password_c\"  $wget_args ${quiet:+-q} ${quiet:--v} -O $filename https://$orp_service/esg-orp/j_spring_openid_security_check.htm "


  #Debug message.
  if  ((debug))
  then
   echo -e "Executing:\n"
   echo -e "$command\n"
  fi 

  #Execution of command.
  http_resp=$(eval $command  2>&1)
  cmd_exit_status="$?"
  
  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi 

  #Evaluate response.
  #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
  #(( "$redirects" != 7 )) ||
  if   echo "$http_resp" | grep -q "text/html"  ||  (( $cmd_exit_status != 0 ))   
  then
   rm "$filename"
   download_http_sec_retry     
  fi #if error during http basic authentication. 
  
}


download() {
    wget="wget ${insecure:+--no-check-certificate} ${quiet:+-q} ${quiet:--v} -c ${force_TLSv1:+--secure-protocol=TLSv1} $PKI_WGET_OPTS"
    
    while read line
    do
        # read csv here document into proper variables
        eval $(awk -F "' '" '{$0=substr($0,2,length($0)-2); $3=tolower($3); print "file=\""$1"\";url=\""$2"\";chksum_type=\""$3"\";chksum=\""$4"\""}' <(echo $line) )

        #Process the file
        echo -n "$file ..."

        #get the cached entry if any.
        cached="$(grep -e "^$file" "$CACHE_FILE")"
        
        #if we have the cache entry but no file, clean it.
        if [[ ! -f $file && "$cached" ]]; then
            #the file was removed, clean the cache
            remove_from_cache "$file"
            unset cached
        fi
        
        #check it wasn't modified
        if [[ -n "$cached" && "$(get_mod_time_ $file)" == $(echo "$cached" | cut -d ' ' -f2) ]]; then
                    if [[ "$chksum" == "$(echo "$cached" | cut -d ' ' -f3)" ]]; then
                echo "Already downloaded and verified"
                continue
            elif ((update_files)); then
                #user want's to overwrite newer files
                rm $file
                remove_from_cache "$file"
                unset cached
            else
                #file on server is different from what we have. 
                echo "WARNING: The remote file was changed (probably a new version is available). Use -U to Update/overwrite"
                continue
            fi
        fi
        unset chksum_err_value chksum_err_count
        
        while : ; do
            # (if we had the file size, we could check before trying to complete)
            echo "Downloading"
            [[ ! -d "$(dirname "$file")" ]] && mkdir -p "$(dirname "$file")"
            if ((dry_run)); then
                #all important info was already displayed, if in dry_run mode just abort
                #No status will be stored
                break
            else
                if ((use_http_sec))
                then
                 download_http_sec
                 if ((failed))
                 then
                  break
                 fi
                else
                 $wget -O "$file" $url || { failed=1; break; }  
                fi                
            fi

            #check if file is there
            if [[ -f $file ]]; then
                ((debug)) && echo file found
                if [[ ! "$chksum" ]]; then
                    echo "Checksum not provided, can't verify file integrity"
                    break
                fi
                result_chksum=$(check_chksum "$file" $chksum_type $chksum)
                if [[ "$result_chksum" != "$chksum" ]]; then
                    echo "  $chksum_type failed!"
                    if ((clean_work)); then
                        if !((chksum_err_count)); then
                                chksum_err_value=$result_chksum
                                chksum_err_count=2
                            elif ((checksum_err_count--)); then
                                if [[ "$result_chksum" != "$chksum_err_value" ]]; then
                                    #this is a real transmission problem
                                    chksum_err_value=$result_chksum
                                    chksum_err_count=2
                                fi
                            else
                                #ok if here we keep getting the same "different" checksum
                                echo "The file returns always a different checksum!"
                                echo "Contact the data owner to verify what is happening."
                                echo
                                sleep 1
                                break
                            fi
                        
                            rm $file
                            #try again
                            echo -n "  re-trying..."
                            continue
                    else
                            echo "  don't use -p or remove manually."
                    fi
                else
                    echo "  $chksum_type ok. done!"
                    echo "$file" $(get_mod_time_ "$file") $chksum >> $CACHE_FILE
                fi
            fi
            #done!
            break
        done
        
        if ((failed)); then
            echo "download failed"
            # most common failure is certificate expiration, so check this
            #if we have the pasword we can retrigger download
            ((!skip_security)) && [[ "$pass" ]] && check_cert
            unset failed
        fi
        
done <<<"$download_files"

}

dedup_cache_() {
    local file=${1:-${CACHE_FILE}}
    ((debug)) && echo "dedup'ing cache ${file} ..."
    local tmp=$(LC_ALL='C' sort  -r -k1,2 $file | awk '!($1 in a) {a[$1];print $0}' | sort -k2,2)
    ((DEBUG)) && echo "$tmp"
    echo "$tmp" > $file
    ((debug)) && echo "(cache dedup'ed)"
}

http_basic_auth_func_info_message()
{
  echo  "********************************************************************************"
  echo  "*                                                                              *"
  echo  "* Note that new functionality to allow authentication without the need for     *"
  echo  "* certificates is available with this version of the wget script.  To enable,  *"
  echo  "* use the \"-H\" option and enter your OpenID and password when prompted:        *"
  echo  "*                                                                              *"
  echo  "* $ "$(basename "$0")" -H [options...]                                     *"
  echo  "*                                                                              *"
  echo  "* For a full description of the available options use the help option:         *"
  echo  "*                                                                              *"
  echo  "* $ "$(basename "$0")" -h                                                  *"
  echo  "*                                                                              *"
  echo  "********************************************************************************"
}

#
# MAIN
#

if ((!use_http_sec))
then 
 http_basic_auth_func_info_message
fi

echo "Running $(basename $0) version: $version"
((verbose)) && echo "we use other tools in here, don't try to user their proposed 'options' directly"
echo "Use $(basename $0) -h for help."$'\n'

((debug)) && cat<<EOF
** Debug info **
ESG_HOME=$ESG_HOME
ESG_CREDENTIALS=$ESG_CREDENTIALS
ESG_CERT_DIR=$ESG_CERT_DIR
** -- ** -- ** -- ** --

EOF


cat <<'EOF-MESSAGE'
There were files with the same name which were requested to be download to the same directory. To avoid overwriting the previous downloaded one they were skipped.
Please use the parameter 'download_structure' to set up unique directories for them.
Script created for 177 file(s)
(The count won't match if you manually edit this file!)



EOF-MESSAGE
sleep 1

check_os
((!skip_security)) && find_credentials

if ((use_http_sec))
then 
     
 if (( ! insecure))
 then 
  get_certificates
 fi

 #Cookies folder.
 COOKIES_FOLDER="$ESG_HOME/wget_cookies"
 
 if (( force ))
 then
  if [ -d $COOKIES_FOLDER ] 
  then
   rm -rf $COOKIES_FOLDER
  fi
 fi

 #Create cookies folder. 
 if [[ ! -d $COOKIES_FOLDER ]] 
 then
  mkdir $COOKIES_FOLDER
 fi
 
 if((! use_cookies_for_http_basic_auth_start))
 then

  #Read openid.
  if [[ ! -z "$openId" ]]
  then
   openid_c="$openId"
  elif ( (("$#" > 1)) || (("$#" == 1)) ) 
  then
   openid_c=$1
  else
   read -p    "Enter your openid : " openid_c
  fi
  
  
  #Read username.
  if [[ ! -z "$username_supplied" ]]
  then
   username_c="$username_supplied"
  elif (("$#" == 2))
  then
   username_c=$2
  elif [[ "$openid_c" == */openid/ || "$openid_c" == */openid ]]
  then
   read -p    "Enter username : " username_c
  fi
  
  #Read password.
  read -s -p "Enter password : " password_c
  echo -e "\n"

 fi #use cookies

fi #use_http_sec 


#do we have old results? Create the file if not
[ ! -f $CACHE_FILE ] && echo "#filename mtime checksum" > $CACHE_FILE && chmod 666 $CACHE_FILE

#clean the force parameter if here (at htis point we already have the certificate)
unset force

download

dedup_cache_


echo "done"
